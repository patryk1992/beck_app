<?xml version="1.0" encoding="UTF-8"?>
<!--
To change this license header, choose License Headers in Project Properties.
To change this template file, choose Tools | Templates
and open the template in the editor.
-->
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
      xmlns:h="http://xmlns.jcp.org/jsf/html"
      xmlns:f="http://xmlns.jcp.org/jsf/core"
      xmlns:p="http://primefaces.org/ui">
      
<h:head>
    <script src="http://maps.google.com/maps/api/js?sensor=false" 
          type="text/javascript"></script>
    <script type="text/javascript">
    var currentMarker = null;
    var listMarkers = [];
    var directionsService = new google.maps.DirectionsService();
    var directionsDisplay = new google.maps.DirectionsRenderer();
    var request;
    function init() {        
       var mapOptions = {
          center: new google.maps.LatLng(41.381542, 2.122893),
          zoom: 15            
        };
         map = new google.maps.Map(document.getElementById("map"), mapOptions);
        directionsDisplay.setMap(map);
         google.maps.event.addListener(map, 'click', function(e) {
                handlePointClick2(e.latLng, map);
            });
       
    }
    function handlePointClick(event) {
        if(currentMarker === null) {
            document.getElementById('lat').value = event.latLng.lat();
            document.getElementById('lng').value = event.latLng.lng();
 
            currentMarker = new google.maps.Marker({
                position:new google.maps.LatLng(event.latLng.lat(), event.latLng.lng())
            }); 
           markerAddComplete();
        }   
    }
      function handlePointClick2(position, map) {
        if(currentMarker === null) {

            currentMarker = new google.maps.Marker({               
                position:position,
                map:map
            });
            markerAddComplete();
          
        }   
    }
 
    function markerAddComplete() {
        var title = document.getElementById('title');       
        listMarkers.push(currentMarker);
       
        currentMarker = null;
        if(listMarkers.length>1){
            calcRoute();
        }
        remoteCommandFunctionName();
    }
 
    function cancel() {
        PF('dlg').hide();
        currentMarker.setMap(null);
        currentMarker = null;
 
        return false;
    }
    function removeMarker() {
        listMarkers.pop();
        calcRoute();
    }
    function calcRoute() {       
               
                var waypts = [];  
                for(var marker in listMarkers){
                    listMarkers[marker].setVisible(false);
                    var element=listMarkers[marker].position;
                    if(marker &gt; 0 &amp;&amp; marker &lt; (listMarkers.length-1)){                
                    waypts.push({
                        location:""+element.A+","+element.F,
                        stopover:true});
                    }
                }
             

                request = {
                    origin: ""+listMarkers[0].position.A+","+listMarkers[0].position.F,
                    destination: ""+listMarkers[listMarkers.length-1].position.A+","+listMarkers[listMarkers.length-1].position.F,
                    waypoints: waypts,                  
                    travelMode: google.maps.TravelMode.WALKING
                };
               
                directionsService.route(request, function(response, status)
                {
                    if (status === google.maps.DirectionsStatus.OK) {
                        directionsDisplay.setDirections(response);
//                        alert('ok');

                    }
                    else {
                        alert('failed');
                    }
                }
                );
               

    }
      google.maps.event.addDomListener(window, 'load', init);
</script>
    
</h:head>
<h:body>
    <f:view contentType="text/html">
        <h1>Google Map</h1>
        <p:gmap center="41.381542, 2.122893" zoom="15"  style="width:600px;height:400px" model="#{addMarkersViewController.emptyModel}" onPointClick="handlePointClick(event);"  widgetVar="map" id="map"  type="ROADMAP"/>
    <p:growl id="messages" showDetail="true" />
    <p:dialog widgetVar="dlg" showEffect="fade">
    <h:form prependId="false">
        <h:panelGrid columns="2">
            <h:outputLabel for="title" value="Title:" />
            <p:inputText id="title" value="#{addMarkersViewController.title}" />
 
            <f:facet name="footer">
                <p:commandButton value="Add" actionListener="#{addMarkersViewController.addMarker}" update=":messages" oncomplete="markerAddComplete()" />
                <p:commandButton value="Cancel" onclick="return cancel()" />
            </f:facet>
        </h:panelGrid>
 
        <h:inputHidden id="lat" value="#{addMarkersViewController.lat}" />
        <h:inputHidden id="lng" value="#{addMarkersViewController.lng}" />
    </h:form>
        
</p:dialog>
    <h:form id="form_5">       
        <p:commandButton actionListener="#{addMarkersViewController.saveMap(listMarkers)}"  value="Save path"/> 
        <p:remoteCommand name="remoteCommandFunctionName"      actionListener="#{addMarkersViewController.addMarker}"/>
         <p:commandButton onclick="removeMarker();" value="Remove"/>  
    </h:form>
    </f:view>
</h:body>
       

</html>
